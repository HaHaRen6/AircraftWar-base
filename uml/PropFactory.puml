@startuml PropFactory
'https://plantuml.com/class-diagram

abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int

    + AbstractAircraft(int locationX, int locationY,
        int speedX, int speedY, int hp)
    + increaseHp(int increase): void
    + decreaseHp(int decrease): void
    + getHp():int
    + {abstract} shoot(): List<BaseBullet>
}


interface Enemy{
    + dropProp():List<AbstractProp>
}


class MobEnemy {

    + MobEnemy(int locationX, int locationY,
        int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + dropProp():List<Prop>
}
AbstractAircraft <|-- MobEnemy
Enemy <|.. MobEnemy


class BossEnemy {
    - shootNum:int
    - power:int
    - direction:int

    + BossEnemy(int locationX, int locationY,
        int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + dropProp():List<Prop>
}
AbstractAircraft <|-- BossEnemy
Enemy <|.. BossEnemy


class EliteEnemy {
    - shootNum:int
    - power:int
    - direction:int

    + EliteEnemy(int locationX, int locationY,
        int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + dropProp():List<Prop>
}
AbstractAircraft <|-- EliteEnemy
Enemy <|.. EliteEnemy


interface EnemyFactory {
    + createEnemy():AbstractAircraft
}


class EliteEnemyFactory {
    + createEnemy():EliteEnemy
}
EnemyFactory <|.. EliteEnemyFactory
EliteEnemy <.. EliteEnemyFactory


class BossEnemyFactory {
    + createEnemy():BossEnemy
}
EnemyFactory <|.. BossEnemyFactory
BossEnemy <.. BossEnemyFactory


class MobEnemyFactory {
    + createEnemy():MobEnemy
}
EnemyFactory <|.. MobEnemyFactory
MobEnemy <.. MobEnemyFactory

@enduml