@startuml PropFactory
'https://plantuml.com/class-diagram


abstract class AbstractProp
{
    + AbstractProp(int locationX, int locationY,
        int speedX, int speedY)
    + forward():void
    + {abstract} active(HeroAircraft heroAircraft):void
}

class BloodProp
{
    - hpIncrease:int

    + BloodProp(int locationX, int locationY,
        int speedX, int speedY)
    + active(HeroAircraft heroAircraft):void
}

class BombProp
{

    + BombProp(int locationX, int locationY,
        int speedX, int speedY)
    + active(HeroAircraft heroAircraft):void
}
AbstractProp <|-- BombProp

class BulletProp
{

    + BulletProp(int locationX, int locationY,
        int speedX, int speedY)
    + active(HeroAircraft heroAircraft):void
}
AbstractProp <|-- BulletProp

interface PropFactory {
    + createProp(int x, int y, int speedY):AbstractProp
}

class BloodPropFactory {
    + createProp(int x, int y, int speedY):BloodProp
}
PropFactory <|.. BloodPropFactory
BloodProp <.. BloodPropFactory

class BombPropFactory {
    + createProp(int x, int y, int speedY):BombProp
}
PropFactory <|.. BombPropFactory
BombProp <.. BombPropFactory

class BulletPropFactory {
    + createProp(int x, int y, int speedY):BulletProp
}
PropFactory <|.. BulletPropFactory
BulletProp <.. BulletPropFactory


@enduml